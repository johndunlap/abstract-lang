package abs.compiler.lexer;

public enum ReservedWord {
    VOID("void"),
    VOLATILE("volatile"),
    STATIC("static"),
    SYNCHRONIZED("synchronized"),
    NULL("null"),
    NOT_KEYWORD("not"),
    PACKAGE("package"),
    IMMUTABLE("immutable"),
    RETURN("return"),
    ASSERT("assert"),
    CLASS("class"),
    INTERFACE("interface"),
    ENUM("enum"),
    IN("in"),
    IMPORT("import"),
    COALESCE("coalesce"),
    THIS("this"),
    NARROW("narrow"),
    DEFAULT("default"),
    FINALLY("finally"),
    FINAL("final"),
    ABSTRACT("abstract"),
    DOUBLE("double"),
    SUPER("super"),
    TRANSIENT("transient"),
    PUBLIC("public"),
    PRIVATE("private"),
    PROTECTED("protected"),
    PARADIGM("paradigm"),
    NATIVE("native"),
    PURE("pure"),
    FOR("for"),
    DO("do"),
    ACCESSOR("accessor"),
    SINGLETON("singleton"),
    TRUE("true"),
    FALSE("false"),
    WHILE("while"),
    BREAK("break"),
    BYTE("byte"),
    CASE("case"),
    VIRTUAL("virtual"),
    SWITCH("switch"),
    CONTINUE("continue"),
    THROWS("throws"),
    THROW("throw"),
    THREAD("thread"),
    NEW("new"),
    CATCH("catch"),
    IF("if"),
    IPLEMENTS("implements"),
    ENTRY("entry"),
    TRY("try"),
    ELSE("else"),
    OOP("oop"),
    FUNCTIONAL("functional"),
    PROCEDURAL("procedural"),
    SET("set"),
    GET("get"),
    GOTO("goto"),
    ALIAS("alias"),
    INSTANCEOF("instanceof"),
    INTEGER("Integer"),
    STRUCT("struct"),
    STRING("String"),
    FLOAT("Float"),
    BOOL("Boolean");

    private String representation;

    private ReservedWord(String representation) {
        this.representation = representation;
    }
}
